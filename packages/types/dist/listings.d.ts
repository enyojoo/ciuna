import { z } from 'zod';
export declare const ListingSchema: z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    seller_id: z.ZodString;
    title: z.ZodString;
    description: z.ZodString;
    category_id: z.ZodString;
    price_rub: z.ZodNumber;
    currency: z.ZodDefault<z.ZodEnum<["USD", "EUR", "GBP", "RUB", "JPY", "CAD", "AUD", "CHF", "CNY", "KRW", "SGD", "HKD", "NZD", "SEK", "NOK", "DKK", "PLN", "CZK", "HUF", "TRY", "BRL", "MXN", "INR", "ZAR", "THB", "MYR", "IDR", "PHP", "VND", "UAH"]>>;
    price_original: z.ZodOptional<z.ZodNumber>;
    exchange_rate: z.ZodOptional<z.ZodNumber>;
    condition: z.ZodEnum<["NEW", "LIKE_NEW", "GOOD", "FAIR"]>;
    city: z.ZodString;
    district: z.ZodOptional<z.ZodString>;
    photo_urls: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    status: z.ZodDefault<z.ZodEnum<["ACTIVE", "PAUSED", "SOLD", "PENDING_REVIEW"]>>;
    is_negotiable: z.ZodDefault<z.ZodBoolean>;
    tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    view_count: z.ZodDefault<z.ZodNumber>;
    favorite_count: z.ZodDefault<z.ZodNumber>;
    expires_at: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    status: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW";
    city: string;
    title: string;
    description: string;
    price_rub: number;
    photo_urls: string[];
    currency: "USD" | "EUR" | "GBP" | "RUB" | "JPY" | "CAD" | "AUD" | "CHF" | "CNY" | "KRW" | "SGD" | "HKD" | "NZD" | "SEK" | "NOK" | "DKK" | "PLN" | "CZK" | "HUF" | "TRY" | "BRL" | "MXN" | "INR" | "ZAR" | "THB" | "MYR" | "IDR" | "PHP" | "VND" | "UAH";
    category_id: string;
    seller_id: string;
    condition: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR";
    is_negotiable: boolean;
    tags: string[];
    view_count: number;
    favorite_count: number;
    price_original?: number | undefined;
    exchange_rate?: number | undefined;
    district?: string | undefined;
    expires_at?: string | undefined;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    city: string;
    title: string;
    description: string;
    price_rub: number;
    category_id: string;
    seller_id: string;
    condition: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR";
    currency?: "USD" | "EUR" | "GBP" | "RUB" | "JPY" | "CAD" | "AUD" | "CHF" | "CNY" | "KRW" | "SGD" | "HKD" | "NZD" | "SEK" | "NOK" | "DKK" | "PLN" | "CZK" | "HUF" | "TRY" | "BRL" | "MXN" | "INR" | "ZAR" | "THB" | "MYR" | "IDR" | "PHP" | "VND" | "UAH" | undefined;
    price_original?: number | undefined;
    exchange_rate?: number | undefined;
    district?: string | undefined;
    photo_urls?: string[] | undefined;
    status?: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW" | undefined;
    is_negotiable?: boolean | undefined;
    tags?: string[] | undefined;
    view_count?: number | undefined;
    favorite_count?: number | undefined;
    expires_at?: string | undefined;
}>;
export declare const CreateListingSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    seller_id: z.ZodString;
    title: z.ZodString;
    description: z.ZodString;
    category_id: z.ZodString;
    price_rub: z.ZodNumber;
    currency: z.ZodDefault<z.ZodEnum<["USD", "EUR", "GBP", "RUB", "JPY", "CAD", "AUD", "CHF", "CNY", "KRW", "SGD", "HKD", "NZD", "SEK", "NOK", "DKK", "PLN", "CZK", "HUF", "TRY", "BRL", "MXN", "INR", "ZAR", "THB", "MYR", "IDR", "PHP", "VND", "UAH"]>>;
    price_original: z.ZodOptional<z.ZodNumber>;
    exchange_rate: z.ZodOptional<z.ZodNumber>;
    condition: z.ZodEnum<["NEW", "LIKE_NEW", "GOOD", "FAIR"]>;
    city: z.ZodString;
    district: z.ZodOptional<z.ZodString>;
    photo_urls: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    status: z.ZodDefault<z.ZodEnum<["ACTIVE", "PAUSED", "SOLD", "PENDING_REVIEW"]>>;
    is_negotiable: z.ZodDefault<z.ZodBoolean>;
    tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    view_count: z.ZodDefault<z.ZodNumber>;
    favorite_count: z.ZodDefault<z.ZodNumber>;
    expires_at: z.ZodOptional<z.ZodString>;
}, "id" | "created_at" | "updated_at" | "view_count" | "favorite_count">, "strip", z.ZodTypeAny, {
    status: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW";
    city: string;
    title: string;
    description: string;
    price_rub: number;
    photo_urls: string[];
    currency: "USD" | "EUR" | "GBP" | "RUB" | "JPY" | "CAD" | "AUD" | "CHF" | "CNY" | "KRW" | "SGD" | "HKD" | "NZD" | "SEK" | "NOK" | "DKK" | "PLN" | "CZK" | "HUF" | "TRY" | "BRL" | "MXN" | "INR" | "ZAR" | "THB" | "MYR" | "IDR" | "PHP" | "VND" | "UAH";
    category_id: string;
    seller_id: string;
    condition: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR";
    is_negotiable: boolean;
    tags: string[];
    district?: string | undefined;
    expires_at?: string | undefined;
    exchange_rate?: number | undefined;
    price_original?: number | undefined;
}, {
    city: string;
    title: string;
    description: string;
    price_rub: number;
    category_id: string;
    seller_id: string;
    condition: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR";
    status?: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW" | undefined;
    district?: string | undefined;
    expires_at?: string | undefined;
    photo_urls?: string[] | undefined;
    currency?: "USD" | "EUR" | "GBP" | "RUB" | "JPY" | "CAD" | "AUD" | "CHF" | "CNY" | "KRW" | "SGD" | "HKD" | "NZD" | "SEK" | "NOK" | "DKK" | "PLN" | "CZK" | "HUF" | "TRY" | "BRL" | "MXN" | "INR" | "ZAR" | "THB" | "MYR" | "IDR" | "PHP" | "VND" | "UAH" | undefined;
    exchange_rate?: number | undefined;
    price_original?: number | undefined;
    is_negotiable?: boolean | undefined;
    tags?: string[] | undefined;
}>;
export declare const UpdateListingSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    created_at: z.ZodOptional<z.ZodString>;
    updated_at: z.ZodOptional<z.ZodString>;
    seller_id: z.ZodOptional<z.ZodString>;
    title: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    category_id: z.ZodOptional<z.ZodString>;
    price_rub: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodOptional<z.ZodDefault<z.ZodEnum<["USD", "EUR", "GBP", "RUB", "JPY", "CAD", "AUD", "CHF", "CNY", "KRW", "SGD", "HKD", "NZD", "SEK", "NOK", "DKK", "PLN", "CZK", "HUF", "TRY", "BRL", "MXN", "INR", "ZAR", "THB", "MYR", "IDR", "PHP", "VND", "UAH"]>>>;
    price_original: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    exchange_rate: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    condition: z.ZodOptional<z.ZodEnum<["NEW", "LIKE_NEW", "GOOD", "FAIR"]>>;
    city: z.ZodOptional<z.ZodString>;
    district: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    photo_urls: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["ACTIVE", "PAUSED", "SOLD", "PENDING_REVIEW"]>>>;
    is_negotiable: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    tags: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    view_count: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    favorite_count: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    expires_at: z.ZodOptional<z.ZodOptional<z.ZodString>>;
}, "id" | "created_at" | "updated_at" | "seller_id" | "view_count" | "favorite_count">, "strip", z.ZodTypeAny, {
    status?: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW" | undefined;
    city?: string | undefined;
    district?: string | undefined;
    title?: string | undefined;
    description?: string | undefined;
    price_rub?: number | undefined;
    expires_at?: string | undefined;
    photo_urls?: string[] | undefined;
    currency?: "USD" | "EUR" | "GBP" | "RUB" | "JPY" | "CAD" | "AUD" | "CHF" | "CNY" | "KRW" | "SGD" | "HKD" | "NZD" | "SEK" | "NOK" | "DKK" | "PLN" | "CZK" | "HUF" | "TRY" | "BRL" | "MXN" | "INR" | "ZAR" | "THB" | "MYR" | "IDR" | "PHP" | "VND" | "UAH" | undefined;
    exchange_rate?: number | undefined;
    category_id?: string | undefined;
    price_original?: number | undefined;
    condition?: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR" | undefined;
    is_negotiable?: boolean | undefined;
    tags?: string[] | undefined;
}, {
    status?: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW" | undefined;
    city?: string | undefined;
    district?: string | undefined;
    title?: string | undefined;
    description?: string | undefined;
    price_rub?: number | undefined;
    expires_at?: string | undefined;
    photo_urls?: string[] | undefined;
    currency?: "USD" | "EUR" | "GBP" | "RUB" | "JPY" | "CAD" | "AUD" | "CHF" | "CNY" | "KRW" | "SGD" | "HKD" | "NZD" | "SEK" | "NOK" | "DKK" | "PLN" | "CZK" | "HUF" | "TRY" | "BRL" | "MXN" | "INR" | "ZAR" | "THB" | "MYR" | "IDR" | "PHP" | "VND" | "UAH" | undefined;
    exchange_rate?: number | undefined;
    category_id?: string | undefined;
    price_original?: number | undefined;
    condition?: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR" | undefined;
    is_negotiable?: boolean | undefined;
    tags?: string[] | undefined;
}>;
export declare const ListingWithRelationsSchema: z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    status: z.ZodDefault<z.ZodEnum<["ACTIVE", "PAUSED", "SOLD", "PENDING_REVIEW"]>>;
    city: z.ZodString;
    district: z.ZodOptional<z.ZodString>;
    title: z.ZodString;
    description: z.ZodString;
    price_rub: z.ZodNumber;
    expires_at: z.ZodOptional<z.ZodString>;
    photo_urls: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    currency: z.ZodDefault<z.ZodEnum<["USD", "EUR", "GBP", "RUB", "JPY", "CAD", "AUD", "CHF", "CNY", "KRW", "SGD", "HKD", "NZD", "SEK", "NOK", "DKK", "PLN", "CZK", "HUF", "TRY", "BRL", "MXN", "INR", "ZAR", "THB", "MYR", "IDR", "PHP", "VND", "UAH"]>>;
    exchange_rate: z.ZodOptional<z.ZodNumber>;
    category_id: z.ZodString;
    seller_id: z.ZodString;
    price_original: z.ZodOptional<z.ZodNumber>;
    condition: z.ZodEnum<["NEW", "LIKE_NEW", "GOOD", "FAIR"]>;
    is_negotiable: z.ZodDefault<z.ZodBoolean>;
    tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    view_count: z.ZodDefault<z.ZodNumber>;
    favorite_count: z.ZodDefault<z.ZodNumber>;
    seller: z.ZodObject<{
        id: z.ZodString;
        email: z.ZodString;
        country_of_origin: z.ZodString;
        city: z.ZodString;
        verified_expat: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        id: string;
        city: string;
        email: string;
        country_of_origin: string;
        verified_expat: boolean;
    }, {
        id: string;
        city: string;
        email: string;
        country_of_origin: string;
        verified_expat: boolean;
    }>;
    category: z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        slug: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        name: string;
        slug: string;
    }, {
        id: string;
        name: string;
        slug: string;
    }>;
    photos: z.ZodOptional<z.ZodArray<z.ZodObject<{
        url: z.ZodString;
        filename: z.ZodString;
        size: z.ZodNumber;
        mime_type: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        url: string;
        filename: string;
        size: number;
        mime_type: string;
    }, {
        url: string;
        filename: string;
        size: number;
        mime_type: string;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    status: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW";
    city: string;
    title: string;
    description: string;
    price_rub: number;
    category: {
        id: string;
        name: string;
        slug: string;
    };
    photo_urls: string[];
    currency: "USD" | "EUR" | "GBP" | "RUB" | "JPY" | "CAD" | "AUD" | "CHF" | "CNY" | "KRW" | "SGD" | "HKD" | "NZD" | "SEK" | "NOK" | "DKK" | "PLN" | "CZK" | "HUF" | "TRY" | "BRL" | "MXN" | "INR" | "ZAR" | "THB" | "MYR" | "IDR" | "PHP" | "VND" | "UAH";
    category_id: string;
    seller_id: string;
    condition: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR";
    is_negotiable: boolean;
    tags: string[];
    view_count: number;
    favorite_count: number;
    seller: {
        id: string;
        city: string;
        email: string;
        country_of_origin: string;
        verified_expat: boolean;
    };
    district?: string | undefined;
    expires_at?: string | undefined;
    exchange_rate?: number | undefined;
    price_original?: number | undefined;
    photos?: {
        url: string;
        filename: string;
        size: number;
        mime_type: string;
    }[] | undefined;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    city: string;
    title: string;
    description: string;
    price_rub: number;
    category: {
        id: string;
        name: string;
        slug: string;
    };
    category_id: string;
    seller_id: string;
    condition: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR";
    seller: {
        id: string;
        city: string;
        email: string;
        country_of_origin: string;
        verified_expat: boolean;
    };
    status?: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW" | undefined;
    district?: string | undefined;
    expires_at?: string | undefined;
    photo_urls?: string[] | undefined;
    currency?: "USD" | "EUR" | "GBP" | "RUB" | "JPY" | "CAD" | "AUD" | "CHF" | "CNY" | "KRW" | "SGD" | "HKD" | "NZD" | "SEK" | "NOK" | "DKK" | "PLN" | "CZK" | "HUF" | "TRY" | "BRL" | "MXN" | "INR" | "ZAR" | "THB" | "MYR" | "IDR" | "PHP" | "VND" | "UAH" | undefined;
    exchange_rate?: number | undefined;
    price_original?: number | undefined;
    is_negotiable?: boolean | undefined;
    tags?: string[] | undefined;
    view_count?: number | undefined;
    favorite_count?: number | undefined;
    photos?: {
        url: string;
        filename: string;
        size: number;
        mime_type: string;
    }[] | undefined;
}>;
export declare const ListingFiltersSchema: z.ZodObject<{
    category_id: z.ZodOptional<z.ZodString>;
    city: z.ZodOptional<z.ZodString>;
    district: z.ZodOptional<z.ZodString>;
    min_price: z.ZodOptional<z.ZodNumber>;
    max_price: z.ZodOptional<z.ZodNumber>;
    condition: z.ZodOptional<z.ZodEnum<["NEW", "LIKE_NEW", "GOOD", "FAIR"]>>;
    status: z.ZodOptional<z.ZodEnum<["ACTIVE", "PAUSED", "SOLD", "PENDING_REVIEW"]>>;
    search: z.ZodOptional<z.ZodString>;
    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    seller_id: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    category_id?: string | undefined;
    city?: string | undefined;
    district?: string | undefined;
    min_price?: number | undefined;
    max_price?: number | undefined;
    condition?: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR" | undefined;
    status?: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW" | undefined;
    search?: string | undefined;
    tags?: string[] | undefined;
    seller_id?: string | undefined;
}, {
    category_id?: string | undefined;
    city?: string | undefined;
    district?: string | undefined;
    min_price?: number | undefined;
    max_price?: number | undefined;
    condition?: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR" | undefined;
    status?: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW" | undefined;
    search?: string | undefined;
    tags?: string[] | undefined;
    seller_id?: string | undefined;
}>;
export declare const ListingSearchResponseSchema: z.ZodObject<{
    listings: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        created_at: z.ZodString;
        updated_at: z.ZodString;
        status: z.ZodDefault<z.ZodEnum<["ACTIVE", "PAUSED", "SOLD", "PENDING_REVIEW"]>>;
        city: z.ZodString;
        district: z.ZodOptional<z.ZodString>;
        title: z.ZodString;
        description: z.ZodString;
        price_rub: z.ZodNumber;
        expires_at: z.ZodOptional<z.ZodString>;
        photo_urls: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        currency: z.ZodDefault<z.ZodEnum<["USD", "EUR", "GBP", "RUB", "JPY", "CAD", "AUD", "CHF", "CNY", "KRW", "SGD", "HKD", "NZD", "SEK", "NOK", "DKK", "PLN", "CZK", "HUF", "TRY", "BRL", "MXN", "INR", "ZAR", "THB", "MYR", "IDR", "PHP", "VND", "UAH"]>>;
        exchange_rate: z.ZodOptional<z.ZodNumber>;
        category_id: z.ZodString;
        seller_id: z.ZodString;
        price_original: z.ZodOptional<z.ZodNumber>;
        condition: z.ZodEnum<["NEW", "LIKE_NEW", "GOOD", "FAIR"]>;
        is_negotiable: z.ZodDefault<z.ZodBoolean>;
        tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        view_count: z.ZodDefault<z.ZodNumber>;
        favorite_count: z.ZodDefault<z.ZodNumber>;
        seller: z.ZodObject<{
            id: z.ZodString;
            email: z.ZodString;
            country_of_origin: z.ZodString;
            city: z.ZodString;
            verified_expat: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            id: string;
            city: string;
            email: string;
            country_of_origin: string;
            verified_expat: boolean;
        }, {
            id: string;
            city: string;
            email: string;
            country_of_origin: string;
            verified_expat: boolean;
        }>;
        category: z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            slug: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            slug: string;
        }, {
            id: string;
            name: string;
            slug: string;
        }>;
        photos: z.ZodOptional<z.ZodArray<z.ZodObject<{
            url: z.ZodString;
            filename: z.ZodString;
            size: z.ZodNumber;
            mime_type: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            url: string;
            filename: string;
            size: number;
            mime_type: string;
        }, {
            url: string;
            filename: string;
            size: number;
            mime_type: string;
        }>, "many">>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        created_at: string;
        updated_at: string;
        status: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW";
        city: string;
        title: string;
        description: string;
        price_rub: number;
        category: {
            id: string;
            name: string;
            slug: string;
        };
        photo_urls: string[];
        currency: "USD" | "EUR" | "GBP" | "RUB" | "JPY" | "CAD" | "AUD" | "CHF" | "CNY" | "KRW" | "SGD" | "HKD" | "NZD" | "SEK" | "NOK" | "DKK" | "PLN" | "CZK" | "HUF" | "TRY" | "BRL" | "MXN" | "INR" | "ZAR" | "THB" | "MYR" | "IDR" | "PHP" | "VND" | "UAH";
        category_id: string;
        seller_id: string;
        condition: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR";
        is_negotiable: boolean;
        tags: string[];
        view_count: number;
        favorite_count: number;
        seller: {
            id: string;
            city: string;
            email: string;
            country_of_origin: string;
            verified_expat: boolean;
        };
        district?: string | undefined;
        expires_at?: string | undefined;
        exchange_rate?: number | undefined;
        price_original?: number | undefined;
        photos?: {
            url: string;
            filename: string;
            size: number;
            mime_type: string;
        }[] | undefined;
    }, {
        id: string;
        created_at: string;
        updated_at: string;
        city: string;
        title: string;
        description: string;
        price_rub: number;
        category: {
            id: string;
            name: string;
            slug: string;
        };
        category_id: string;
        seller_id: string;
        condition: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR";
        seller: {
            id: string;
            city: string;
            email: string;
            country_of_origin: string;
            verified_expat: boolean;
        };
        status?: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW" | undefined;
        district?: string | undefined;
        expires_at?: string | undefined;
        photo_urls?: string[] | undefined;
        currency?: "USD" | "EUR" | "GBP" | "RUB" | "JPY" | "CAD" | "AUD" | "CHF" | "CNY" | "KRW" | "SGD" | "HKD" | "NZD" | "SEK" | "NOK" | "DKK" | "PLN" | "CZK" | "HUF" | "TRY" | "BRL" | "MXN" | "INR" | "ZAR" | "THB" | "MYR" | "IDR" | "PHP" | "VND" | "UAH" | undefined;
        exchange_rate?: number | undefined;
        price_original?: number | undefined;
        is_negotiable?: boolean | undefined;
        tags?: string[] | undefined;
        view_count?: number | undefined;
        favorite_count?: number | undefined;
        photos?: {
            url: string;
            filename: string;
            size: number;
            mime_type: string;
        }[] | undefined;
    }>, "many">;
    total: z.ZodNumber;
    filters: z.ZodObject<{
        category_id: z.ZodOptional<z.ZodString>;
        city: z.ZodOptional<z.ZodString>;
        district: z.ZodOptional<z.ZodString>;
        min_price: z.ZodOptional<z.ZodNumber>;
        max_price: z.ZodOptional<z.ZodNumber>;
        condition: z.ZodOptional<z.ZodEnum<["NEW", "LIKE_NEW", "GOOD", "FAIR"]>>;
        status: z.ZodOptional<z.ZodEnum<["ACTIVE", "PAUSED", "SOLD", "PENDING_REVIEW"]>>;
        search: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        seller_id: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        category_id?: string | undefined;
        city?: string | undefined;
        district?: string | undefined;
        min_price?: number | undefined;
        max_price?: number | undefined;
        condition?: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR" | undefined;
        status?: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW" | undefined;
        search?: string | undefined;
        tags?: string[] | undefined;
        seller_id?: string | undefined;
    }, {
        category_id?: string | undefined;
        city?: string | undefined;
        district?: string | undefined;
        min_price?: number | undefined;
        max_price?: number | undefined;
        condition?: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR" | undefined;
        status?: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW" | undefined;
        search?: string | undefined;
        tags?: string[] | undefined;
        seller_id?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    total: number;
    listings: {
        id: string;
        created_at: string;
        updated_at: string;
        status: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW";
        city: string;
        title: string;
        description: string;
        price_rub: number;
        category: {
            id: string;
            name: string;
            slug: string;
        };
        photo_urls: string[];
        currency: "USD" | "EUR" | "GBP" | "RUB" | "JPY" | "CAD" | "AUD" | "CHF" | "CNY" | "KRW" | "SGD" | "HKD" | "NZD" | "SEK" | "NOK" | "DKK" | "PLN" | "CZK" | "HUF" | "TRY" | "BRL" | "MXN" | "INR" | "ZAR" | "THB" | "MYR" | "IDR" | "PHP" | "VND" | "UAH";
        category_id: string;
        seller_id: string;
        condition: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR";
        is_negotiable: boolean;
        tags: string[];
        view_count: number;
        favorite_count: number;
        seller: {
            id: string;
            city: string;
            email: string;
            country_of_origin: string;
            verified_expat: boolean;
        };
        district?: string | undefined;
        expires_at?: string | undefined;
        exchange_rate?: number | undefined;
        price_original?: number | undefined;
        photos?: {
            url: string;
            filename: string;
            size: number;
            mime_type: string;
        }[] | undefined;
    }[];
    filters: {
        category_id?: string | undefined;
        city?: string | undefined;
        district?: string | undefined;
        min_price?: number | undefined;
        max_price?: number | undefined;
        condition?: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR" | undefined;
        status?: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW" | undefined;
        search?: string | undefined;
        tags?: string[] | undefined;
        seller_id?: string | undefined;
    };
}, {
    total: number;
    listings: {
        id: string;
        created_at: string;
        updated_at: string;
        city: string;
        title: string;
        description: string;
        price_rub: number;
        category: {
            id: string;
            name: string;
            slug: string;
        };
        category_id: string;
        seller_id: string;
        condition: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR";
        seller: {
            id: string;
            city: string;
            email: string;
            country_of_origin: string;
            verified_expat: boolean;
        };
        status?: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW" | undefined;
        district?: string | undefined;
        expires_at?: string | undefined;
        photo_urls?: string[] | undefined;
        currency?: "USD" | "EUR" | "GBP" | "RUB" | "JPY" | "CAD" | "AUD" | "CHF" | "CNY" | "KRW" | "SGD" | "HKD" | "NZD" | "SEK" | "NOK" | "DKK" | "PLN" | "CZK" | "HUF" | "TRY" | "BRL" | "MXN" | "INR" | "ZAR" | "THB" | "MYR" | "IDR" | "PHP" | "VND" | "UAH" | undefined;
        exchange_rate?: number | undefined;
        price_original?: number | undefined;
        is_negotiable?: boolean | undefined;
        tags?: string[] | undefined;
        view_count?: number | undefined;
        favorite_count?: number | undefined;
        photos?: {
            url: string;
            filename: string;
            size: number;
            mime_type: string;
        }[] | undefined;
    }[];
    filters: {
        category_id?: string | undefined;
        city?: string | undefined;
        district?: string | undefined;
        min_price?: number | undefined;
        max_price?: number | undefined;
        condition?: "NEW" | "LIKE_NEW" | "GOOD" | "FAIR" | undefined;
        status?: "ACTIVE" | "PAUSED" | "SOLD" | "PENDING_REVIEW" | undefined;
        search?: string | undefined;
        tags?: string[] | undefined;
        seller_id?: string | undefined;
    };
}>;
export type Listing = z.infer<typeof ListingSchema>;
export type CreateListing = z.infer<typeof CreateListingSchema>;
export type UpdateListing = z.infer<typeof UpdateListingSchema>;
export type ListingWithRelations = z.infer<typeof ListingWithRelationsSchema>;
export type ListingFilters = z.infer<typeof ListingFiltersSchema>;
export type ListingSearchResponse = z.infer<typeof ListingSearchResponseSchema>;
//# sourceMappingURL=listings.d.ts.map