import { z } from 'zod';
export declare const ServiceBookingSchema: z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    service_id: z.ZodString;
    client_id: z.ZodString;
    scheduled_at: z.ZodString;
    duration_minutes: z.ZodNumber;
    status: z.ZodDefault<z.ZodEnum<["PENDING", "CONFIRMED", "COMPLETED", "CANCELLED"]>>;
    escrow_status: z.ZodDefault<z.ZodEnum<["HELD", "RELEASED", "REFUNDED"]>>;
    total_amount_rub: z.ZodNumber;
    escrow_amount_rub: z.ZodNumber;
    payment_id: z.ZodOptional<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
    requirements: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    deliverables: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    meeting_link: z.ZodOptional<z.ZodString>;
    meeting_location: z.ZodOptional<z.ZodString>;
    is_online: z.ZodDefault<z.ZodBoolean>;
    is_in_person: z.ZodDefault<z.ZodBoolean>;
    confirmed_at: z.ZodOptional<z.ZodString>;
    completed_at: z.ZodOptional<z.ZodString>;
    cancelled_at: z.ZodOptional<z.ZodString>;
    cancelled_reason: z.ZodOptional<z.ZodString>;
    rescheduled_at: z.ZodOptional<z.ZodString>;
    reschedule_reason: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    status: "PENDING" | "CANCELLED" | "COMPLETED" | "CONFIRMED";
    service_id: string;
    client_id: string;
    scheduled_at: string;
    duration_minutes: number;
    escrow_status: "HELD" | "RELEASED" | "REFUNDED";
    total_amount_rub: number;
    escrow_amount_rub: number;
    requirements: string[];
    deliverables: string[];
    is_online: boolean;
    is_in_person: boolean;
    payment_id?: string | undefined;
    notes?: string | undefined;
    meeting_link?: string | undefined;
    meeting_location?: string | undefined;
    confirmed_at?: string | undefined;
    completed_at?: string | undefined;
    cancelled_at?: string | undefined;
    cancelled_reason?: string | undefined;
    rescheduled_at?: string | undefined;
    reschedule_reason?: string | undefined;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    service_id: string;
    client_id: string;
    scheduled_at: string;
    duration_minutes: number;
    total_amount_rub: number;
    escrow_amount_rub: number;
    status?: "PENDING" | "CANCELLED" | "COMPLETED" | "CONFIRMED" | undefined;
    escrow_status?: "HELD" | "RELEASED" | "REFUNDED" | undefined;
    payment_id?: string | undefined;
    notes?: string | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
    meeting_link?: string | undefined;
    meeting_location?: string | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
    confirmed_at?: string | undefined;
    completed_at?: string | undefined;
    cancelled_at?: string | undefined;
    cancelled_reason?: string | undefined;
    rescheduled_at?: string | undefined;
    reschedule_reason?: string | undefined;
}>;
export declare const CreateServiceBookingSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    service_id: z.ZodString;
    client_id: z.ZodString;
    scheduled_at: z.ZodString;
    duration_minutes: z.ZodNumber;
    status: z.ZodDefault<z.ZodEnum<["PENDING", "CONFIRMED", "COMPLETED", "CANCELLED"]>>;
    escrow_status: z.ZodDefault<z.ZodEnum<["HELD", "RELEASED", "REFUNDED"]>>;
    total_amount_rub: z.ZodNumber;
    escrow_amount_rub: z.ZodNumber;
    payment_id: z.ZodOptional<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
    requirements: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    deliverables: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    meeting_link: z.ZodOptional<z.ZodString>;
    meeting_location: z.ZodOptional<z.ZodString>;
    is_online: z.ZodDefault<z.ZodBoolean>;
    is_in_person: z.ZodDefault<z.ZodBoolean>;
    confirmed_at: z.ZodOptional<z.ZodString>;
    completed_at: z.ZodOptional<z.ZodString>;
    cancelled_at: z.ZodOptional<z.ZodString>;
    cancelled_reason: z.ZodOptional<z.ZodString>;
    rescheduled_at: z.ZodOptional<z.ZodString>;
    reschedule_reason: z.ZodOptional<z.ZodString>;
}, "id" | "created_at" | "updated_at" | "confirmed_at" | "completed_at" | "cancelled_at" | "cancelled_reason" | "rescheduled_at" | "reschedule_reason">, "strip", z.ZodTypeAny, {
    status: "PENDING" | "CANCELLED" | "COMPLETED" | "CONFIRMED";
    service_id: string;
    client_id: string;
    scheduled_at: string;
    duration_minutes: number;
    escrow_status: "HELD" | "RELEASED" | "REFUNDED";
    total_amount_rub: number;
    escrow_amount_rub: number;
    requirements: string[];
    deliverables: string[];
    is_online: boolean;
    is_in_person: boolean;
    payment_id?: string | undefined;
    notes?: string | undefined;
    meeting_link?: string | undefined;
    meeting_location?: string | undefined;
}, {
    service_id: string;
    client_id: string;
    scheduled_at: string;
    duration_minutes: number;
    total_amount_rub: number;
    escrow_amount_rub: number;
    status?: "PENDING" | "CANCELLED" | "COMPLETED" | "CONFIRMED" | undefined;
    escrow_status?: "HELD" | "RELEASED" | "REFUNDED" | undefined;
    payment_id?: string | undefined;
    notes?: string | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
    meeting_link?: string | undefined;
    meeting_location?: string | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
}>;
export declare const UpdateServiceBookingSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    created_at: z.ZodOptional<z.ZodString>;
    updated_at: z.ZodOptional<z.ZodString>;
    service_id: z.ZodOptional<z.ZodString>;
    client_id: z.ZodOptional<z.ZodString>;
    scheduled_at: z.ZodOptional<z.ZodString>;
    duration_minutes: z.ZodOptional<z.ZodNumber>;
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["PENDING", "CONFIRMED", "COMPLETED", "CANCELLED"]>>>;
    escrow_status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["HELD", "RELEASED", "REFUNDED"]>>>;
    total_amount_rub: z.ZodOptional<z.ZodNumber>;
    escrow_amount_rub: z.ZodOptional<z.ZodNumber>;
    payment_id: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    notes: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    requirements: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    deliverables: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    meeting_link: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    meeting_location: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    is_online: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    is_in_person: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    confirmed_at: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    completed_at: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    cancelled_at: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    cancelled_reason: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    rescheduled_at: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    reschedule_reason: z.ZodOptional<z.ZodOptional<z.ZodString>>;
}, "id" | "created_at" | "updated_at" | "service_id" | "client_id">, "strip", z.ZodTypeAny, {
    status?: "PENDING" | "CANCELLED" | "COMPLETED" | "CONFIRMED" | undefined;
    scheduled_at?: string | undefined;
    duration_minutes?: number | undefined;
    escrow_status?: "HELD" | "RELEASED" | "REFUNDED" | undefined;
    total_amount_rub?: number | undefined;
    escrow_amount_rub?: number | undefined;
    payment_id?: string | undefined;
    notes?: string | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
    meeting_link?: string | undefined;
    meeting_location?: string | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
    confirmed_at?: string | undefined;
    completed_at?: string | undefined;
    cancelled_at?: string | undefined;
    cancelled_reason?: string | undefined;
    rescheduled_at?: string | undefined;
    reschedule_reason?: string | undefined;
}, {
    status?: "PENDING" | "CANCELLED" | "COMPLETED" | "CONFIRMED" | undefined;
    scheduled_at?: string | undefined;
    duration_minutes?: number | undefined;
    escrow_status?: "HELD" | "RELEASED" | "REFUNDED" | undefined;
    total_amount_rub?: number | undefined;
    escrow_amount_rub?: number | undefined;
    payment_id?: string | undefined;
    notes?: string | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
    meeting_link?: string | undefined;
    meeting_location?: string | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
    confirmed_at?: string | undefined;
    completed_at?: string | undefined;
    cancelled_at?: string | undefined;
    cancelled_reason?: string | undefined;
    rescheduled_at?: string | undefined;
    reschedule_reason?: string | undefined;
}>;
export declare const ServiceBookingWithRelationsSchema: z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    status: z.ZodDefault<z.ZodEnum<["PENDING", "CONFIRMED", "COMPLETED", "CANCELLED"]>>;
    service_id: z.ZodString;
    client_id: z.ZodString;
    scheduled_at: z.ZodString;
    duration_minutes: z.ZodNumber;
    escrow_status: z.ZodDefault<z.ZodEnum<["HELD", "RELEASED", "REFUNDED"]>>;
    total_amount_rub: z.ZodNumber;
    escrow_amount_rub: z.ZodNumber;
    payment_id: z.ZodOptional<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
    requirements: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    deliverables: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    meeting_link: z.ZodOptional<z.ZodString>;
    meeting_location: z.ZodOptional<z.ZodString>;
    is_online: z.ZodDefault<z.ZodBoolean>;
    is_in_person: z.ZodDefault<z.ZodBoolean>;
    confirmed_at: z.ZodOptional<z.ZodString>;
    completed_at: z.ZodOptional<z.ZodString>;
    cancelled_at: z.ZodOptional<z.ZodString>;
    cancelled_reason: z.ZodOptional<z.ZodString>;
    rescheduled_at: z.ZodOptional<z.ZodString>;
    reschedule_reason: z.ZodOptional<z.ZodString>;
    service: z.ZodObject<{
        id: z.ZodString;
        title: z.ZodString;
        description: z.ZodString;
        price_rub: z.ZodNumber;
        duration_minutes: z.ZodNumber;
        category: z.ZodString;
        provider: z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            bio: z.ZodString;
            verified: z.ZodBoolean;
            rating: z.ZodNumber;
            review_count: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            bio: string;
            verified: boolean;
            rating: number;
            review_count: number;
        }, {
            id: string;
            name: string;
            bio: string;
            verified: boolean;
            rating: number;
            review_count: number;
        }>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        duration_minutes: number;
        title: string;
        description: string;
        price_rub: number;
        category: string;
        provider: {
            id: string;
            name: string;
            bio: string;
            verified: boolean;
            rating: number;
            review_count: number;
        };
    }, {
        id: string;
        duration_minutes: number;
        title: string;
        description: string;
        price_rub: number;
        category: string;
        provider: {
            id: string;
            name: string;
            bio: string;
            verified: boolean;
            rating: number;
            review_count: number;
        };
    }>;
    client: z.ZodObject<{
        id: z.ZodString;
        email: z.ZodString;
        country_of_origin: z.ZodString;
        city: z.ZodString;
        phone: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        city: string;
        email: string;
        country_of_origin: string;
        phone?: string | undefined;
    }, {
        id: string;
        city: string;
        email: string;
        country_of_origin: string;
        phone?: string | undefined;
    }>;
    payment: z.ZodOptional<z.ZodObject<{
        id: z.ZodString;
        provider: z.ZodString;
        status: z.ZodString;
        amount_rub: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        id: string;
        status: string;
        provider: string;
        amount_rub: number;
    }, {
        id: string;
        status: string;
        provider: string;
        amount_rub: number;
    }>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    status: "PENDING" | "CANCELLED" | "COMPLETED" | "CONFIRMED";
    service_id: string;
    client_id: string;
    scheduled_at: string;
    duration_minutes: number;
    escrow_status: "HELD" | "RELEASED" | "REFUNDED";
    total_amount_rub: number;
    escrow_amount_rub: number;
    requirements: string[];
    deliverables: string[];
    is_online: boolean;
    is_in_person: boolean;
    service: {
        id: string;
        duration_minutes: number;
        title: string;
        description: string;
        price_rub: number;
        category: string;
        provider: {
            id: string;
            name: string;
            bio: string;
            verified: boolean;
            rating: number;
            review_count: number;
        };
    };
    client: {
        id: string;
        city: string;
        email: string;
        country_of_origin: string;
        phone?: string | undefined;
    };
    payment_id?: string | undefined;
    notes?: string | undefined;
    meeting_link?: string | undefined;
    meeting_location?: string | undefined;
    confirmed_at?: string | undefined;
    completed_at?: string | undefined;
    cancelled_at?: string | undefined;
    cancelled_reason?: string | undefined;
    rescheduled_at?: string | undefined;
    reschedule_reason?: string | undefined;
    payment?: {
        id: string;
        status: string;
        provider: string;
        amount_rub: number;
    } | undefined;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    service_id: string;
    client_id: string;
    scheduled_at: string;
    duration_minutes: number;
    total_amount_rub: number;
    escrow_amount_rub: number;
    service: {
        id: string;
        duration_minutes: number;
        title: string;
        description: string;
        price_rub: number;
        category: string;
        provider: {
            id: string;
            name: string;
            bio: string;
            verified: boolean;
            rating: number;
            review_count: number;
        };
    };
    client: {
        id: string;
        city: string;
        email: string;
        country_of_origin: string;
        phone?: string | undefined;
    };
    status?: "PENDING" | "CANCELLED" | "COMPLETED" | "CONFIRMED" | undefined;
    escrow_status?: "HELD" | "RELEASED" | "REFUNDED" | undefined;
    payment_id?: string | undefined;
    notes?: string | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
    meeting_link?: string | undefined;
    meeting_location?: string | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
    confirmed_at?: string | undefined;
    completed_at?: string | undefined;
    cancelled_at?: string | undefined;
    cancelled_reason?: string | undefined;
    rescheduled_at?: string | undefined;
    reschedule_reason?: string | undefined;
    payment?: {
        id: string;
        status: string;
        provider: string;
        amount_rub: number;
    } | undefined;
}>;
export declare const BookingAvailabilitySchema: z.ZodObject<{
    service_id: z.ZodString;
    date: z.ZodString;
    available_slots: z.ZodArray<z.ZodObject<{
        start_time: z.ZodString;
        end_time: z.ZodString;
        is_available: z.ZodBoolean;
        price_rub: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        start_time: string;
        end_time: string;
        is_available: boolean;
        price_rub?: number | undefined;
    }, {
        start_time: string;
        end_time: string;
        is_available: boolean;
        price_rub?: number | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    date: string;
    service_id: string;
    available_slots: {
        start_time: string;
        end_time: string;
        is_available: boolean;
        price_rub?: number | undefined;
    }[];
}, {
    date: string;
    service_id: string;
    available_slots: {
        start_time: string;
        end_time: string;
        is_available: boolean;
        price_rub?: number | undefined;
    }[];
}>;
export declare const BookingCalendarSchema: z.ZodObject<{
    service_id: z.ZodString;
    month: z.ZodNumber;
    year: z.ZodNumber;
    days: z.ZodArray<z.ZodObject<{
        date: z.ZodString;
        is_available: z.ZodBoolean;
        available_slots: z.ZodNumber;
        booked_slots: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        date: string;
        available_slots: number;
        is_available: boolean;
        booked_slots: number;
    }, {
        date: string;
        available_slots: number;
        is_available: boolean;
        booked_slots: number;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    service_id: string;
    month: number;
    year: number;
    days: {
        date: string;
        available_slots: number;
        is_available: boolean;
        booked_slots: number;
    }[];
}, {
    service_id: string;
    month: number;
    year: number;
    days: {
        date: string;
        available_slots: number;
        is_available: boolean;
        booked_slots: number;
    }[];
}>;
export declare const BookingFiltersSchema: z.ZodObject<{
    client_id: z.ZodOptional<z.ZodString>;
    service_id: z.ZodOptional<z.ZodString>;
    provider_id: z.ZodOptional<z.ZodString>;
    status: z.ZodOptional<z.ZodEnum<["PENDING", "CONFIRMED", "COMPLETED", "CANCELLED"]>>;
    escrow_status: z.ZodOptional<z.ZodEnum<["HELD", "RELEASED", "REFUNDED"]>>;
    date_from: z.ZodOptional<z.ZodString>;
    date_to: z.ZodOptional<z.ZodString>;
    is_online: z.ZodOptional<z.ZodBoolean>;
    is_in_person: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    client_id?: string | undefined;
    service_id?: string | undefined;
    provider_id?: string | undefined;
    status?: "PENDING" | "CANCELLED" | "COMPLETED" | "CONFIRMED" | undefined;
    escrow_status?: "HELD" | "RELEASED" | "REFUNDED" | undefined;
    date_from?: string | undefined;
    date_to?: string | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
}, {
    client_id?: string | undefined;
    service_id?: string | undefined;
    provider_id?: string | undefined;
    status?: "PENDING" | "CANCELLED" | "COMPLETED" | "CONFIRMED" | undefined;
    escrow_status?: "HELD" | "RELEASED" | "REFUNDED" | undefined;
    date_from?: string | undefined;
    date_to?: string | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
}>;
export declare const BookingStatsSchema: z.ZodObject<{
    total_bookings: z.ZodNumber;
    pending_bookings: z.ZodNumber;
    confirmed_bookings: z.ZodNumber;
    completed_bookings: z.ZodNumber;
    cancelled_bookings: z.ZodNumber;
    total_revenue: z.ZodNumber;
    monthly_revenue: z.ZodNumber;
    average_booking_value: z.ZodNumber;
    completion_rate: z.ZodNumber;
    cancellation_rate: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    total_bookings: number;
    pending_bookings: number;
    confirmed_bookings: number;
    completed_bookings: number;
    cancelled_bookings: number;
    total_revenue: number;
    monthly_revenue: number;
    average_booking_value: number;
    completion_rate: number;
    cancellation_rate: number;
}, {
    total_bookings: number;
    pending_bookings: number;
    confirmed_bookings: number;
    completed_bookings: number;
    cancelled_bookings: number;
    total_revenue: number;
    monthly_revenue: number;
    average_booking_value: number;
    completion_rate: number;
    cancellation_rate: number;
}>;
export declare const BookingReminderSchema: z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    booking_id: z.ZodString;
    type: z.ZodEnum<["EMAIL", "SMS", "PUSH"]>;
    scheduled_for: z.ZodString;
    sent_at: z.ZodOptional<z.ZodString>;
    status: z.ZodDefault<z.ZodEnum<["PENDING", "SENT", "FAILED"]>>;
    template: z.ZodString;
    variables: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    type: "EMAIL" | "SMS" | "PUSH";
    status: "PENDING" | "SENT" | "FAILED";
    booking_id: string;
    scheduled_for: string;
    template: string;
    variables: Record<string, any>;
    sent_at?: string | undefined;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    type: "EMAIL" | "SMS" | "PUSH";
    booking_id: string;
    scheduled_for: string;
    template: string;
    sent_at?: string | undefined;
    status?: "PENDING" | "SENT" | "FAILED" | undefined;
    variables?: Record<string, any> | undefined;
}>;
export declare const BookingReviewRequestSchema: z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    booking_id: z.ZodString;
    sent_at: z.ZodString;
    expires_at: z.ZodString;
    status: z.ZodDefault<z.ZodEnum<["PENDING", "COMPLETED", "EXPIRED"]>>;
    reminder_sent: z.ZodDefault<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    status: "PENDING" | "COMPLETED" | "EXPIRED";
    booking_id: string;
    sent_at: string;
    expires_at: string;
    reminder_sent: boolean;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    booking_id: string;
    sent_at: string;
    expires_at: string;
    status?: "PENDING" | "COMPLETED" | "EXPIRED" | undefined;
    reminder_sent?: boolean | undefined;
}>;
export type ServiceBooking = z.infer<typeof ServiceBookingSchema>;
export type CreateServiceBooking = z.infer<typeof CreateServiceBookingSchema>;
export type UpdateServiceBooking = z.infer<typeof UpdateServiceBookingSchema>;
export type ServiceBookingWithRelations = z.infer<typeof ServiceBookingWithRelationsSchema>;
export type BookingAvailability = z.infer<typeof BookingAvailabilitySchema>;
export type BookingCalendar = z.infer<typeof BookingCalendarSchema>;
export type BookingFilters = z.infer<typeof BookingFiltersSchema>;
export type BookingStats = z.infer<typeof BookingStatsSchema>;
export type BookingReminder = z.infer<typeof BookingReminderSchema>;
export type BookingReviewRequest = z.infer<typeof BookingReviewRequestSchema>;
//# sourceMappingURL=bookings.d.ts.map