import { z } from 'zod';
export declare const ServiceProviderSchema: z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    profile_id: z.ZodString;
    name: z.ZodString;
    bio: z.ZodString;
    skills: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    credentials: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>;
    verified: z.ZodDefault<z.ZodBoolean>;
    status: z.ZodDefault<z.ZodEnum<["ACTIVE", "SUSPENDED"]>>;
    rating: z.ZodDefault<z.ZodNumber>;
    review_count: z.ZodDefault<z.ZodNumber>;
    total_bookings: z.ZodDefault<z.ZodNumber>;
    response_time_hours: z.ZodOptional<z.ZodNumber>;
    completion_rate: z.ZodDefault<z.ZodNumber>;
    languages: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    service_areas: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    portfolio_urls: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    social_links: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodString>>;
    hourly_rate_rub: z.ZodOptional<z.ZodNumber>;
    min_project_value_rub: z.ZodOptional<z.ZodNumber>;
    max_project_value_rub: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    status: "ACTIVE" | "SUSPENDED";
    name: string;
    bio: string;
    verified: boolean;
    rating: number;
    review_count: number;
    total_bookings: number;
    completion_rate: number;
    languages: string[];
    social_links: Record<string, string>;
    profile_id: string;
    skills: string[];
    credentials: Record<string, any>;
    service_areas: string[];
    portfolio_urls: string[];
    response_time_hours?: number | undefined;
    hourly_rate_rub?: number | undefined;
    min_project_value_rub?: number | undefined;
    max_project_value_rub?: number | undefined;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    name: string;
    bio: string;
    profile_id: string;
    skills?: string[] | undefined;
    credentials?: Record<string, any> | undefined;
    verified?: boolean | undefined;
    status?: "ACTIVE" | "SUSPENDED" | undefined;
    rating?: number | undefined;
    review_count?: number | undefined;
    total_bookings?: number | undefined;
    response_time_hours?: number | undefined;
    completion_rate?: number | undefined;
    languages?: string[] | undefined;
    service_areas?: string[] | undefined;
    portfolio_urls?: string[] | undefined;
    social_links?: Record<string, string> | undefined;
    hourly_rate_rub?: number | undefined;
    min_project_value_rub?: number | undefined;
    max_project_value_rub?: number | undefined;
}>;
export declare const CreateServiceProviderSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    profile_id: z.ZodString;
    name: z.ZodString;
    bio: z.ZodString;
    skills: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    credentials: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>;
    verified: z.ZodDefault<z.ZodBoolean>;
    status: z.ZodDefault<z.ZodEnum<["ACTIVE", "SUSPENDED"]>>;
    rating: z.ZodDefault<z.ZodNumber>;
    review_count: z.ZodDefault<z.ZodNumber>;
    total_bookings: z.ZodDefault<z.ZodNumber>;
    response_time_hours: z.ZodOptional<z.ZodNumber>;
    completion_rate: z.ZodDefault<z.ZodNumber>;
    languages: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    service_areas: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    portfolio_urls: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    social_links: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodString>>;
    hourly_rate_rub: z.ZodOptional<z.ZodNumber>;
    min_project_value_rub: z.ZodOptional<z.ZodNumber>;
    max_project_value_rub: z.ZodOptional<z.ZodNumber>;
}, "id" | "created_at" | "updated_at" | "rating" | "review_count" | "total_bookings" | "completion_rate">, "strip", z.ZodTypeAny, {
    status: "ACTIVE" | "SUSPENDED";
    name: string;
    bio: string;
    verified: boolean;
    languages: string[];
    social_links: Record<string, string>;
    profile_id: string;
    skills: string[];
    credentials: Record<string, any>;
    service_areas: string[];
    portfolio_urls: string[];
    response_time_hours?: number | undefined;
    hourly_rate_rub?: number | undefined;
    min_project_value_rub?: number | undefined;
    max_project_value_rub?: number | undefined;
}, {
    name: string;
    bio: string;
    profile_id: string;
    status?: "ACTIVE" | "SUSPENDED" | undefined;
    verified?: boolean | undefined;
    languages?: string[] | undefined;
    social_links?: Record<string, string> | undefined;
    skills?: string[] | undefined;
    credentials?: Record<string, any> | undefined;
    response_time_hours?: number | undefined;
    service_areas?: string[] | undefined;
    portfolio_urls?: string[] | undefined;
    hourly_rate_rub?: number | undefined;
    min_project_value_rub?: number | undefined;
    max_project_value_rub?: number | undefined;
}>;
export declare const UpdateServiceProviderSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    created_at: z.ZodOptional<z.ZodString>;
    updated_at: z.ZodOptional<z.ZodString>;
    profile_id: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    bio: z.ZodOptional<z.ZodString>;
    skills: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    credentials: z.ZodOptional<z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    verified: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["ACTIVE", "SUSPENDED"]>>>;
    rating: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    review_count: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    total_bookings: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    response_time_hours: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    completion_rate: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    languages: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    service_areas: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    portfolio_urls: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    social_links: z.ZodOptional<z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodString>>>;
    hourly_rate_rub: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    min_project_value_rub: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    max_project_value_rub: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
}, "id" | "created_at" | "updated_at" | "rating" | "review_count" | "total_bookings" | "completion_rate" | "profile_id">, "strip", z.ZodTypeAny, {
    status?: "ACTIVE" | "SUSPENDED" | undefined;
    name?: string | undefined;
    bio?: string | undefined;
    verified?: boolean | undefined;
    languages?: string[] | undefined;
    social_links?: Record<string, string> | undefined;
    skills?: string[] | undefined;
    credentials?: Record<string, any> | undefined;
    response_time_hours?: number | undefined;
    service_areas?: string[] | undefined;
    portfolio_urls?: string[] | undefined;
    hourly_rate_rub?: number | undefined;
    min_project_value_rub?: number | undefined;
    max_project_value_rub?: number | undefined;
}, {
    status?: "ACTIVE" | "SUSPENDED" | undefined;
    name?: string | undefined;
    bio?: string | undefined;
    verified?: boolean | undefined;
    languages?: string[] | undefined;
    social_links?: Record<string, string> | undefined;
    skills?: string[] | undefined;
    credentials?: Record<string, any> | undefined;
    response_time_hours?: number | undefined;
    service_areas?: string[] | undefined;
    portfolio_urls?: string[] | undefined;
    hourly_rate_rub?: number | undefined;
    min_project_value_rub?: number | undefined;
    max_project_value_rub?: number | undefined;
}>;
export declare const ServiceSchema: z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    provider_id: z.ZodString;
    title: z.ZodString;
    description: z.ZodString;
    category: z.ZodEnum<["LEGAL", "FINANCIAL", "PERSONAL", "EVENT", "HEALTHCARE"]>;
    price_rub: z.ZodNumber;
    duration_minutes: z.ZodNumber;
    available_slots: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>;
    is_online: z.ZodDefault<z.ZodBoolean>;
    is_in_person: z.ZodDefault<z.ZodBoolean>;
    location: z.ZodOptional<z.ZodString>;
    max_participants: z.ZodDefault<z.ZodNumber>;
    requirements: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    deliverables: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    cancellation_policy: z.ZodOptional<z.ZodString>;
    status: z.ZodDefault<z.ZodEnum<["ACTIVE", "INACTIVE", "SUSPENDED"]>>;
    tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    view_count: z.ZodDefault<z.ZodNumber>;
    booking_count: z.ZodDefault<z.ZodNumber>;
    rating: z.ZodDefault<z.ZodNumber>;
    review_count: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    status: "ACTIVE" | "SUSPENDED" | "INACTIVE";
    duration_minutes: number;
    requirements: string[];
    deliverables: string[];
    is_online: boolean;
    is_in_person: boolean;
    title: string;
    description: string;
    price_rub: number;
    category: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE";
    rating: number;
    review_count: number;
    available_slots: Record<string, any>;
    provider_id: string;
    tags: string[];
    view_count: number;
    max_participants: number;
    booking_count: number;
    location?: string | undefined;
    cancellation_policy?: string | undefined;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    duration_minutes: number;
    title: string;
    description: string;
    price_rub: number;
    category: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE";
    provider_id: string;
    available_slots?: Record<string, any> | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
    location?: string | undefined;
    max_participants?: number | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
    cancellation_policy?: string | undefined;
    status?: "ACTIVE" | "SUSPENDED" | "INACTIVE" | undefined;
    tags?: string[] | undefined;
    view_count?: number | undefined;
    booking_count?: number | undefined;
    rating?: number | undefined;
    review_count?: number | undefined;
}>;
export declare const CreateServiceSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    provider_id: z.ZodString;
    title: z.ZodString;
    description: z.ZodString;
    category: z.ZodEnum<["LEGAL", "FINANCIAL", "PERSONAL", "EVENT", "HEALTHCARE"]>;
    price_rub: z.ZodNumber;
    duration_minutes: z.ZodNumber;
    available_slots: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>;
    is_online: z.ZodDefault<z.ZodBoolean>;
    is_in_person: z.ZodDefault<z.ZodBoolean>;
    location: z.ZodOptional<z.ZodString>;
    max_participants: z.ZodDefault<z.ZodNumber>;
    requirements: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    deliverables: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    cancellation_policy: z.ZodOptional<z.ZodString>;
    status: z.ZodDefault<z.ZodEnum<["ACTIVE", "INACTIVE", "SUSPENDED"]>>;
    tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    view_count: z.ZodDefault<z.ZodNumber>;
    booking_count: z.ZodDefault<z.ZodNumber>;
    rating: z.ZodDefault<z.ZodNumber>;
    review_count: z.ZodDefault<z.ZodNumber>;
}, "id" | "created_at" | "updated_at" | "rating" | "review_count" | "view_count" | "booking_count">, "strip", z.ZodTypeAny, {
    status: "ACTIVE" | "SUSPENDED" | "INACTIVE";
    duration_minutes: number;
    requirements: string[];
    deliverables: string[];
    is_online: boolean;
    is_in_person: boolean;
    title: string;
    description: string;
    price_rub: number;
    category: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE";
    available_slots: Record<string, any>;
    provider_id: string;
    tags: string[];
    max_participants: number;
    location?: string | undefined;
    cancellation_policy?: string | undefined;
}, {
    duration_minutes: number;
    title: string;
    description: string;
    price_rub: number;
    category: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE";
    provider_id: string;
    status?: "ACTIVE" | "SUSPENDED" | "INACTIVE" | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
    available_slots?: Record<string, any> | undefined;
    tags?: string[] | undefined;
    location?: string | undefined;
    max_participants?: number | undefined;
    cancellation_policy?: string | undefined;
}>;
export declare const UpdateServiceSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    created_at: z.ZodOptional<z.ZodString>;
    updated_at: z.ZodOptional<z.ZodString>;
    provider_id: z.ZodOptional<z.ZodString>;
    title: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    category: z.ZodOptional<z.ZodEnum<["LEGAL", "FINANCIAL", "PERSONAL", "EVENT", "HEALTHCARE"]>>;
    price_rub: z.ZodOptional<z.ZodNumber>;
    duration_minutes: z.ZodOptional<z.ZodNumber>;
    available_slots: z.ZodOptional<z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    is_online: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    is_in_person: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    location: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    max_participants: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    requirements: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    deliverables: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    cancellation_policy: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["ACTIVE", "INACTIVE", "SUSPENDED"]>>>;
    tags: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    view_count: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    booking_count: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    rating: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    review_count: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
}, "id" | "created_at" | "updated_at" | "rating" | "review_count" | "provider_id" | "view_count" | "booking_count">, "strip", z.ZodTypeAny, {
    status?: "ACTIVE" | "SUSPENDED" | "INACTIVE" | undefined;
    duration_minutes?: number | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
    title?: string | undefined;
    description?: string | undefined;
    price_rub?: number | undefined;
    category?: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE" | undefined;
    available_slots?: Record<string, any> | undefined;
    tags?: string[] | undefined;
    location?: string | undefined;
    max_participants?: number | undefined;
    cancellation_policy?: string | undefined;
}, {
    status?: "ACTIVE" | "SUSPENDED" | "INACTIVE" | undefined;
    duration_minutes?: number | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
    title?: string | undefined;
    description?: string | undefined;
    price_rub?: number | undefined;
    category?: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE" | undefined;
    available_slots?: Record<string, any> | undefined;
    tags?: string[] | undefined;
    location?: string | undefined;
    max_participants?: number | undefined;
    cancellation_policy?: string | undefined;
}>;
export declare const ServiceWithRelationsSchema: z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    status: z.ZodDefault<z.ZodEnum<["ACTIVE", "INACTIVE", "SUSPENDED"]>>;
    duration_minutes: z.ZodNumber;
    requirements: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    deliverables: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    is_online: z.ZodDefault<z.ZodBoolean>;
    is_in_person: z.ZodDefault<z.ZodBoolean>;
    title: z.ZodString;
    description: z.ZodString;
    price_rub: z.ZodNumber;
    category: z.ZodEnum<["LEGAL", "FINANCIAL", "PERSONAL", "EVENT", "HEALTHCARE"]>;
    rating: z.ZodDefault<z.ZodNumber>;
    review_count: z.ZodDefault<z.ZodNumber>;
    available_slots: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>;
    provider_id: z.ZodString;
    tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    view_count: z.ZodDefault<z.ZodNumber>;
    location: z.ZodOptional<z.ZodString>;
    max_participants: z.ZodDefault<z.ZodNumber>;
    cancellation_policy: z.ZodOptional<z.ZodString>;
    booking_count: z.ZodDefault<z.ZodNumber>;
    provider: z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        bio: z.ZodString;
        verified: z.ZodBoolean;
        rating: z.ZodNumber;
        review_count: z.ZodNumber;
        response_time_hours: z.ZodOptional<z.ZodNumber>;
        languages: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        id: string;
        name: string;
        bio: string;
        verified: boolean;
        rating: number;
        review_count: number;
        languages: string[];
        response_time_hours?: number | undefined;
    }, {
        id: string;
        name: string;
        bio: string;
        verified: boolean;
        rating: number;
        review_count: number;
        languages: string[];
        response_time_hours?: number | undefined;
    }>;
    category_info: z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        description?: string | undefined;
    }, {
        name: string;
        description?: string | undefined;
    }>;
    reviews: z.ZodOptional<z.ZodObject<{
        average_rating: z.ZodNumber;
        total_count: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        average_rating: number;
        total_count: number;
    }, {
        average_rating: number;
        total_count: number;
    }>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    status: "ACTIVE" | "SUSPENDED" | "INACTIVE";
    duration_minutes: number;
    requirements: string[];
    deliverables: string[];
    is_online: boolean;
    is_in_person: boolean;
    title: string;
    description: string;
    price_rub: number;
    category: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE";
    provider: {
        id: string;
        name: string;
        bio: string;
        verified: boolean;
        rating: number;
        review_count: number;
        languages: string[];
        response_time_hours?: number | undefined;
    };
    rating: number;
    review_count: number;
    available_slots: Record<string, any>;
    provider_id: string;
    tags: string[];
    view_count: number;
    max_participants: number;
    booking_count: number;
    category_info: {
        name: string;
        description?: string | undefined;
    };
    location?: string | undefined;
    cancellation_policy?: string | undefined;
    reviews?: {
        average_rating: number;
        total_count: number;
    } | undefined;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    duration_minutes: number;
    title: string;
    description: string;
    price_rub: number;
    category: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE";
    provider: {
        id: string;
        name: string;
        bio: string;
        verified: boolean;
        rating: number;
        review_count: number;
        languages: string[];
        response_time_hours?: number | undefined;
    };
    provider_id: string;
    category_info: {
        name: string;
        description?: string | undefined;
    };
    status?: "ACTIVE" | "SUSPENDED" | "INACTIVE" | undefined;
    requirements?: string[] | undefined;
    deliverables?: string[] | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
    rating?: number | undefined;
    review_count?: number | undefined;
    available_slots?: Record<string, any> | undefined;
    tags?: string[] | undefined;
    view_count?: number | undefined;
    location?: string | undefined;
    max_participants?: number | undefined;
    cancellation_policy?: string | undefined;
    booking_count?: number | undefined;
    reviews?: {
        average_rating: number;
        total_count: number;
    } | undefined;
}>;
export declare const ServiceFiltersSchema: z.ZodObject<{
    provider_id: z.ZodOptional<z.ZodString>;
    category: z.ZodOptional<z.ZodEnum<["LEGAL", "FINANCIAL", "PERSONAL", "EVENT", "HEALTHCARE"]>>;
    min_price: z.ZodOptional<z.ZodNumber>;
    max_price: z.ZodOptional<z.ZodNumber>;
    is_online: z.ZodOptional<z.ZodBoolean>;
    is_in_person: z.ZodOptional<z.ZodBoolean>;
    location: z.ZodOptional<z.ZodString>;
    min_rating: z.ZodOptional<z.ZodNumber>;
    search: z.ZodOptional<z.ZodString>;
    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    available_date: z.ZodOptional<z.ZodString>;
    max_duration: z.ZodOptional<z.ZodNumber>;
    min_duration: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    provider_id?: string | undefined;
    category?: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE" | undefined;
    min_price?: number | undefined;
    max_price?: number | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
    location?: string | undefined;
    min_rating?: number | undefined;
    search?: string | undefined;
    tags?: string[] | undefined;
    available_date?: string | undefined;
    max_duration?: number | undefined;
    min_duration?: number | undefined;
}, {
    provider_id?: string | undefined;
    category?: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE" | undefined;
    min_price?: number | undefined;
    max_price?: number | undefined;
    is_online?: boolean | undefined;
    is_in_person?: boolean | undefined;
    location?: string | undefined;
    min_rating?: number | undefined;
    search?: string | undefined;
    tags?: string[] | undefined;
    available_date?: string | undefined;
    max_duration?: number | undefined;
    min_duration?: number | undefined;
}>;
export declare const ServiceSearchResponseSchema: z.ZodObject<{
    services: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        created_at: z.ZodString;
        updated_at: z.ZodString;
        status: z.ZodDefault<z.ZodEnum<["ACTIVE", "INACTIVE", "SUSPENDED"]>>;
        duration_minutes: z.ZodNumber;
        requirements: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        deliverables: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        is_online: z.ZodDefault<z.ZodBoolean>;
        is_in_person: z.ZodDefault<z.ZodBoolean>;
        title: z.ZodString;
        description: z.ZodString;
        price_rub: z.ZodNumber;
        category: z.ZodEnum<["LEGAL", "FINANCIAL", "PERSONAL", "EVENT", "HEALTHCARE"]>;
        rating: z.ZodDefault<z.ZodNumber>;
        review_count: z.ZodDefault<z.ZodNumber>;
        available_slots: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>;
        provider_id: z.ZodString;
        tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        view_count: z.ZodDefault<z.ZodNumber>;
        location: z.ZodOptional<z.ZodString>;
        max_participants: z.ZodDefault<z.ZodNumber>;
        cancellation_policy: z.ZodOptional<z.ZodString>;
        booking_count: z.ZodDefault<z.ZodNumber>;
        provider: z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            bio: z.ZodString;
            verified: z.ZodBoolean;
            rating: z.ZodNumber;
            review_count: z.ZodNumber;
            response_time_hours: z.ZodOptional<z.ZodNumber>;
            languages: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            bio: string;
            verified: boolean;
            rating: number;
            review_count: number;
            languages: string[];
            response_time_hours?: number | undefined;
        }, {
            id: string;
            name: string;
            bio: string;
            verified: boolean;
            rating: number;
            review_count: number;
            languages: string[];
            response_time_hours?: number | undefined;
        }>;
        category_info: z.ZodObject<{
            name: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            name: string;
            description?: string | undefined;
        }, {
            name: string;
            description?: string | undefined;
        }>;
        reviews: z.ZodOptional<z.ZodObject<{
            average_rating: z.ZodNumber;
            total_count: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            average_rating: number;
            total_count: number;
        }, {
            average_rating: number;
            total_count: number;
        }>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        created_at: string;
        updated_at: string;
        status: "ACTIVE" | "SUSPENDED" | "INACTIVE";
        duration_minutes: number;
        requirements: string[];
        deliverables: string[];
        is_online: boolean;
        is_in_person: boolean;
        title: string;
        description: string;
        price_rub: number;
        category: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE";
        provider: {
            id: string;
            name: string;
            bio: string;
            verified: boolean;
            rating: number;
            review_count: number;
            languages: string[];
            response_time_hours?: number | undefined;
        };
        rating: number;
        review_count: number;
        available_slots: Record<string, any>;
        provider_id: string;
        tags: string[];
        view_count: number;
        max_participants: number;
        booking_count: number;
        category_info: {
            name: string;
            description?: string | undefined;
        };
        location?: string | undefined;
        cancellation_policy?: string | undefined;
        reviews?: {
            average_rating: number;
            total_count: number;
        } | undefined;
    }, {
        id: string;
        created_at: string;
        updated_at: string;
        duration_minutes: number;
        title: string;
        description: string;
        price_rub: number;
        category: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE";
        provider: {
            id: string;
            name: string;
            bio: string;
            verified: boolean;
            rating: number;
            review_count: number;
            languages: string[];
            response_time_hours?: number | undefined;
        };
        provider_id: string;
        category_info: {
            name: string;
            description?: string | undefined;
        };
        status?: "ACTIVE" | "SUSPENDED" | "INACTIVE" | undefined;
        requirements?: string[] | undefined;
        deliverables?: string[] | undefined;
        is_online?: boolean | undefined;
        is_in_person?: boolean | undefined;
        rating?: number | undefined;
        review_count?: number | undefined;
        available_slots?: Record<string, any> | undefined;
        tags?: string[] | undefined;
        view_count?: number | undefined;
        location?: string | undefined;
        max_participants?: number | undefined;
        cancellation_policy?: string | undefined;
        booking_count?: number | undefined;
        reviews?: {
            average_rating: number;
            total_count: number;
        } | undefined;
    }>, "many">;
    total: z.ZodNumber;
    filters: z.ZodObject<{
        provider_id: z.ZodOptional<z.ZodString>;
        category: z.ZodOptional<z.ZodEnum<["LEGAL", "FINANCIAL", "PERSONAL", "EVENT", "HEALTHCARE"]>>;
        min_price: z.ZodOptional<z.ZodNumber>;
        max_price: z.ZodOptional<z.ZodNumber>;
        is_online: z.ZodOptional<z.ZodBoolean>;
        is_in_person: z.ZodOptional<z.ZodBoolean>;
        location: z.ZodOptional<z.ZodString>;
        min_rating: z.ZodOptional<z.ZodNumber>;
        search: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        available_date: z.ZodOptional<z.ZodString>;
        max_duration: z.ZodOptional<z.ZodNumber>;
        min_duration: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        provider_id?: string | undefined;
        category?: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE" | undefined;
        min_price?: number | undefined;
        max_price?: number | undefined;
        is_online?: boolean | undefined;
        is_in_person?: boolean | undefined;
        location?: string | undefined;
        min_rating?: number | undefined;
        search?: string | undefined;
        tags?: string[] | undefined;
        available_date?: string | undefined;
        max_duration?: number | undefined;
        min_duration?: number | undefined;
    }, {
        provider_id?: string | undefined;
        category?: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE" | undefined;
        min_price?: number | undefined;
        max_price?: number | undefined;
        is_online?: boolean | undefined;
        is_in_person?: boolean | undefined;
        location?: string | undefined;
        min_rating?: number | undefined;
        search?: string | undefined;
        tags?: string[] | undefined;
        available_date?: string | undefined;
        max_duration?: number | undefined;
        min_duration?: number | undefined;
    }>;
    aggregations: z.ZodOptional<z.ZodObject<{
        price_ranges: z.ZodArray<z.ZodObject<{
            min: z.ZodNumber;
            max: z.ZodNumber;
            count: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            min: number;
            max: number;
            count: number;
        }, {
            min: number;
            max: number;
            count: number;
        }>, "many">;
        categories: z.ZodArray<z.ZodObject<{
            name: z.ZodString;
            count: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            name: string;
            count: number;
        }, {
            name: string;
            count: number;
        }>, "many">;
        providers: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            count: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            count: number;
        }, {
            id: string;
            name: string;
            count: number;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        price_ranges: {
            min: number;
            max: number;
            count: number;
        }[];
        categories: {
            name: string;
            count: number;
        }[];
        providers: {
            id: string;
            name: string;
            count: number;
        }[];
    }, {
        price_ranges: {
            min: number;
            max: number;
            count: number;
        }[];
        categories: {
            name: string;
            count: number;
        }[];
        providers: {
            id: string;
            name: string;
            count: number;
        }[];
    }>>;
}, "strip", z.ZodTypeAny, {
    total: number;
    filters: {
        provider_id?: string | undefined;
        category?: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE" | undefined;
        min_price?: number | undefined;
        max_price?: number | undefined;
        is_online?: boolean | undefined;
        is_in_person?: boolean | undefined;
        location?: string | undefined;
        min_rating?: number | undefined;
        search?: string | undefined;
        tags?: string[] | undefined;
        available_date?: string | undefined;
        max_duration?: number | undefined;
        min_duration?: number | undefined;
    };
    services: {
        id: string;
        created_at: string;
        updated_at: string;
        status: "ACTIVE" | "SUSPENDED" | "INACTIVE";
        duration_minutes: number;
        requirements: string[];
        deliverables: string[];
        is_online: boolean;
        is_in_person: boolean;
        title: string;
        description: string;
        price_rub: number;
        category: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE";
        provider: {
            id: string;
            name: string;
            bio: string;
            verified: boolean;
            rating: number;
            review_count: number;
            languages: string[];
            response_time_hours?: number | undefined;
        };
        rating: number;
        review_count: number;
        available_slots: Record<string, any>;
        provider_id: string;
        tags: string[];
        view_count: number;
        max_participants: number;
        booking_count: number;
        category_info: {
            name: string;
            description?: string | undefined;
        };
        location?: string | undefined;
        cancellation_policy?: string | undefined;
        reviews?: {
            average_rating: number;
            total_count: number;
        } | undefined;
    }[];
    aggregations?: {
        price_ranges: {
            min: number;
            max: number;
            count: number;
        }[];
        categories: {
            name: string;
            count: number;
        }[];
        providers: {
            id: string;
            name: string;
            count: number;
        }[];
    } | undefined;
}, {
    total: number;
    filters: {
        provider_id?: string | undefined;
        category?: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE" | undefined;
        min_price?: number | undefined;
        max_price?: number | undefined;
        is_online?: boolean | undefined;
        is_in_person?: boolean | undefined;
        location?: string | undefined;
        min_rating?: number | undefined;
        search?: string | undefined;
        tags?: string[] | undefined;
        available_date?: string | undefined;
        max_duration?: number | undefined;
        min_duration?: number | undefined;
    };
    services: {
        id: string;
        created_at: string;
        updated_at: string;
        duration_minutes: number;
        title: string;
        description: string;
        price_rub: number;
        category: "LEGAL" | "FINANCIAL" | "PERSONAL" | "EVENT" | "HEALTHCARE";
        provider: {
            id: string;
            name: string;
            bio: string;
            verified: boolean;
            rating: number;
            review_count: number;
            languages: string[];
            response_time_hours?: number | undefined;
        };
        provider_id: string;
        category_info: {
            name: string;
            description?: string | undefined;
        };
        status?: "ACTIVE" | "SUSPENDED" | "INACTIVE" | undefined;
        requirements?: string[] | undefined;
        deliverables?: string[] | undefined;
        is_online?: boolean | undefined;
        is_in_person?: boolean | undefined;
        rating?: number | undefined;
        review_count?: number | undefined;
        available_slots?: Record<string, any> | undefined;
        tags?: string[] | undefined;
        view_count?: number | undefined;
        location?: string | undefined;
        max_participants?: number | undefined;
        cancellation_policy?: string | undefined;
        booking_count?: number | undefined;
        reviews?: {
            average_rating: number;
            total_count: number;
        } | undefined;
    }[];
    aggregations?: {
        price_ranges: {
            min: number;
            max: number;
            count: number;
        }[];
        categories: {
            name: string;
            count: number;
        }[];
        providers: {
            id: string;
            name: string;
            count: number;
        }[];
    } | undefined;
}>;
export declare const ServiceProviderVerificationSchema: z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    provider_id: z.ZodString;
    status: z.ZodDefault<z.ZodEnum<["PENDING", "APPROVED", "REJECTED"]>>;
    documents: z.ZodArray<z.ZodObject<{
        type: z.ZodString;
        url: z.ZodString;
        filename: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: string;
        url: string;
        filename: string;
    }, {
        type: string;
        url: string;
        filename: string;
    }>, "many">;
    admin_notes: z.ZodOptional<z.ZodString>;
    verified_at: z.ZodOptional<z.ZodString>;
    verified_by: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    status: "PENDING" | "APPROVED" | "REJECTED";
    provider_id: string;
    documents: {
        type: string;
        url: string;
        filename: string;
    }[];
    admin_notes?: string | undefined;
    verified_at?: string | undefined;
    verified_by?: string | undefined;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    provider_id: string;
    documents: {
        type: string;
        url: string;
        filename: string;
    }[];
    status?: "PENDING" | "APPROVED" | "REJECTED" | undefined;
    admin_notes?: string | undefined;
    verified_at?: string | undefined;
    verified_by?: string | undefined;
}>;
export declare const ServiceProviderStatsSchema: z.ZodObject<{
    total_services: z.ZodNumber;
    active_services: z.ZodNumber;
    total_bookings: z.ZodNumber;
    pending_bookings: z.ZodNumber;
    completed_bookings: z.ZodNumber;
    total_revenue: z.ZodNumber;
    monthly_revenue: z.ZodNumber;
    average_rating: z.ZodNumber;
    total_reviews: z.ZodNumber;
    response_rate: z.ZodNumber;
    completion_rate: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    total_bookings: number;
    pending_bookings: number;
    completed_bookings: number;
    total_revenue: number;
    monthly_revenue: number;
    completion_rate: number;
    total_reviews: number;
    average_rating: number;
    total_services: number;
    active_services: number;
    response_rate: number;
}, {
    total_bookings: number;
    pending_bookings: number;
    completed_bookings: number;
    total_revenue: number;
    monthly_revenue: number;
    completion_rate: number;
    total_reviews: number;
    average_rating: number;
    total_services: number;
    active_services: number;
    response_rate: number;
}>;
export type ServiceProvider = z.infer<typeof ServiceProviderSchema>;
export type CreateServiceProvider = z.infer<typeof CreateServiceProviderSchema>;
export type UpdateServiceProvider = z.infer<typeof UpdateServiceProviderSchema>;
export declare const ServiceProviderWithProfileSchema: z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    status: z.ZodDefault<z.ZodEnum<["ACTIVE", "SUSPENDED"]>>;
    name: z.ZodString;
    bio: z.ZodString;
    verified: z.ZodDefault<z.ZodBoolean>;
    rating: z.ZodDefault<z.ZodNumber>;
    review_count: z.ZodDefault<z.ZodNumber>;
    total_bookings: z.ZodDefault<z.ZodNumber>;
    completion_rate: z.ZodDefault<z.ZodNumber>;
    languages: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    social_links: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodString>>;
    profile_id: z.ZodString;
    skills: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    credentials: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>;
    response_time_hours: z.ZodOptional<z.ZodNumber>;
    service_areas: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    portfolio_urls: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    hourly_rate_rub: z.ZodOptional<z.ZodNumber>;
    min_project_value_rub: z.ZodOptional<z.ZodNumber>;
    max_project_value_rub: z.ZodOptional<z.ZodNumber>;
    profile: z.ZodObject<{
        id: z.ZodString;
        email: z.ZodString;
        role: z.ZodEnum<["USER", "VENDOR", "COURIER", "ADMIN"]>;
        country_of_origin: z.ZodOptional<z.ZodString>;
        city: z.ZodOptional<z.ZodString>;
        district: z.ZodOptional<z.ZodString>;
        phone: z.ZodOptional<z.ZodString>;
        verified_expat: z.ZodBoolean;
        verification_status: z.ZodEnum<["PENDING", "APPROVED", "REJECTED"]>;
        created_at: z.ZodString;
        updated_at: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        created_at: string;
        updated_at: string;
        email: string;
        verified_expat: boolean;
        role: "USER" | "VENDOR" | "COURIER" | "ADMIN";
        verification_status: "PENDING" | "APPROVED" | "REJECTED";
        country_of_origin?: string | undefined;
        city?: string | undefined;
        district?: string | undefined;
        phone?: string | undefined;
    }, {
        id: string;
        created_at: string;
        updated_at: string;
        email: string;
        verified_expat: boolean;
        role: "USER" | "VENDOR" | "COURIER" | "ADMIN";
        verification_status: "PENDING" | "APPROVED" | "REJECTED";
        country_of_origin?: string | undefined;
        city?: string | undefined;
        district?: string | undefined;
        phone?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    status: "ACTIVE" | "SUSPENDED";
    name: string;
    bio: string;
    verified: boolean;
    rating: number;
    review_count: number;
    total_bookings: number;
    completion_rate: number;
    languages: string[];
    social_links: Record<string, string>;
    profile_id: string;
    skills: string[];
    credentials: Record<string, any>;
    service_areas: string[];
    portfolio_urls: string[];
    profile: {
        id: string;
        created_at: string;
        updated_at: string;
        email: string;
        verified_expat: boolean;
        role: "USER" | "VENDOR" | "COURIER" | "ADMIN";
        verification_status: "PENDING" | "APPROVED" | "REJECTED";
        country_of_origin?: string | undefined;
        city?: string | undefined;
        district?: string | undefined;
        phone?: string | undefined;
    };
    response_time_hours?: number | undefined;
    hourly_rate_rub?: number | undefined;
    min_project_value_rub?: number | undefined;
    max_project_value_rub?: number | undefined;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    name: string;
    bio: string;
    profile_id: string;
    profile: {
        id: string;
        created_at: string;
        updated_at: string;
        email: string;
        verified_expat: boolean;
        role: "USER" | "VENDOR" | "COURIER" | "ADMIN";
        verification_status: "PENDING" | "APPROVED" | "REJECTED";
        country_of_origin?: string | undefined;
        city?: string | undefined;
        district?: string | undefined;
        phone?: string | undefined;
    };
    status?: "ACTIVE" | "SUSPENDED" | undefined;
    verified?: boolean | undefined;
    rating?: number | undefined;
    review_count?: number | undefined;
    total_bookings?: number | undefined;
    completion_rate?: number | undefined;
    languages?: string[] | undefined;
    social_links?: Record<string, string> | undefined;
    skills?: string[] | undefined;
    credentials?: Record<string, any> | undefined;
    response_time_hours?: number | undefined;
    service_areas?: string[] | undefined;
    portfolio_urls?: string[] | undefined;
    hourly_rate_rub?: number | undefined;
    min_project_value_rub?: number | undefined;
    max_project_value_rub?: number | undefined;
}>;
export type ServiceProviderWithProfile = z.infer<typeof ServiceProviderWithProfileSchema>;
export type Service = z.infer<typeof ServiceSchema>;
export type CreateService = z.infer<typeof CreateServiceSchema>;
export type UpdateService = z.infer<typeof UpdateServiceSchema>;
export type ServiceWithRelations = z.infer<typeof ServiceWithRelationsSchema>;
export type ServiceFilters = z.infer<typeof ServiceFiltersSchema>;
export type ServiceSearchResponse = z.infer<typeof ServiceSearchResponseSchema>;
export type ServiceProviderVerification = z.infer<typeof ServiceProviderVerificationSchema>;
export type ServiceProviderStats = z.infer<typeof ServiceProviderStatsSchema>;
//# sourceMappingURL=services.d.ts.map