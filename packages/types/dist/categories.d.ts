import { z } from 'zod';
export declare const CategorySchema: z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    name: z.ZodString;
    slug: z.ZodString;
    parent_id: z.ZodNullable<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    icon: z.ZodOptional<z.ZodString>;
    sort_order: z.ZodDefault<z.ZodNumber>;
    is_active: z.ZodDefault<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    name: string;
    slug: string;
    parent_id: string | null;
    sort_order: number;
    is_active: boolean;
    description?: string | undefined;
    icon?: string | undefined;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    name: string;
    slug: string;
    parent_id: string | null;
    description?: string | undefined;
    icon?: string | undefined;
    sort_order?: number | undefined;
    is_active?: boolean | undefined;
}>;
export declare const CreateCategorySchema: z.ZodObject<Omit<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    name: z.ZodString;
    slug: z.ZodString;
    parent_id: z.ZodNullable<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    icon: z.ZodOptional<z.ZodString>;
    sort_order: z.ZodDefault<z.ZodNumber>;
    is_active: z.ZodDefault<z.ZodBoolean>;
}, "id" | "created_at" | "updated_at">, "strip", z.ZodTypeAny, {
    name: string;
    slug: string;
    parent_id: string | null;
    sort_order: number;
    is_active: boolean;
    description?: string | undefined;
    icon?: string | undefined;
}, {
    name: string;
    slug: string;
    parent_id: string | null;
    description?: string | undefined;
    icon?: string | undefined;
    sort_order?: number | undefined;
    is_active?: boolean | undefined;
}>;
export declare const UpdateCategorySchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    created_at: z.ZodOptional<z.ZodString>;
    updated_at: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    slug: z.ZodOptional<z.ZodString>;
    parent_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    icon: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    sort_order: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    is_active: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
}, "id" | "created_at" | "updated_at">, "strip", z.ZodTypeAny, {
    description?: string | undefined;
    name?: string | undefined;
    slug?: string | undefined;
    parent_id?: string | null | undefined;
    icon?: string | undefined;
    sort_order?: number | undefined;
    is_active?: boolean | undefined;
}, {
    description?: string | undefined;
    name?: string | undefined;
    slug?: string | undefined;
    parent_id?: string | null | undefined;
    icon?: string | undefined;
    sort_order?: number | undefined;
    is_active?: boolean | undefined;
}>;
export declare const CategoryWithChildrenSchema: z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    name: z.ZodString;
    slug: z.ZodString;
    parent_id: z.ZodNullable<z.ZodString>;
    icon: z.ZodOptional<z.ZodString>;
    sort_order: z.ZodDefault<z.ZodNumber>;
    is_active: z.ZodDefault<z.ZodBoolean>;
    children: z.ZodOptional<z.ZodArray<z.ZodAny, "many">>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    name: string;
    slug: string;
    parent_id: string | null;
    sort_order: number;
    is_active: boolean;
    description?: string | undefined;
    icon?: string | undefined;
    children?: any[] | undefined;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    name: string;
    slug: string;
    parent_id: string | null;
    description?: string | undefined;
    icon?: string | undefined;
    sort_order?: number | undefined;
    is_active?: boolean | undefined;
    children?: any[] | undefined;
}>;
export declare const CategoryTreeSchema: z.ZodArray<z.ZodObject<{
    id: z.ZodString;
    created_at: z.ZodString;
    updated_at: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    name: z.ZodString;
    slug: z.ZodString;
    parent_id: z.ZodNullable<z.ZodString>;
    icon: z.ZodOptional<z.ZodString>;
    sort_order: z.ZodDefault<z.ZodNumber>;
    is_active: z.ZodDefault<z.ZodBoolean>;
    children: z.ZodOptional<z.ZodArray<z.ZodAny, "many">>;
}, "strip", z.ZodTypeAny, {
    id: string;
    created_at: string;
    updated_at: string;
    name: string;
    slug: string;
    parent_id: string | null;
    sort_order: number;
    is_active: boolean;
    description?: string | undefined;
    icon?: string | undefined;
    children?: any[] | undefined;
}, {
    id: string;
    created_at: string;
    updated_at: string;
    name: string;
    slug: string;
    parent_id: string | null;
    description?: string | undefined;
    icon?: string | undefined;
    sort_order?: number | undefined;
    is_active?: boolean | undefined;
    children?: any[] | undefined;
}>, "many">;
export type Category = z.infer<typeof CategorySchema>;
export type CreateCategory = z.infer<typeof CreateCategorySchema>;
export type UpdateCategory = z.infer<typeof UpdateCategorySchema>;
export type CategoryWithChildren = z.infer<typeof CategoryWithChildrenSchema>;
export type CategoryTree = z.infer<typeof CategoryTreeSchema>;
//# sourceMappingURL=categories.d.ts.map