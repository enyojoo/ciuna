"use strict";(()=>{var e={};e.id=920,e.ids=[920],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2615:e=>{e.exports=require("http")},5240:e=>{e.exports=require("https")},8621:e=>{e.exports=require("punycode")},6162:e=>{e.exports=require("stream")},7360:e=>{e.exports=require("url")},1568:e=>{e.exports=require("zlib")},5999:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>m,requestAsyncStorage:()=>l,routeModule:()=>f,serverHooks:()=>x,staticGenerationAsyncStorage:()=>d});var n={};t.r(n),t.d(n,{GET:()=>p,POST:()=>c});var s=t(1686),o=t(4975),i=t(8640),a=t(8039),u=t(6974);async function p(e){try{let{searchParams:r}=new URL(e.url),t=r.get("userId");if(!t)return a.NextResponse.json({error:"User ID is required"},{status:400});let{data:n,error:s}=await u.OQ.from("user_notification_preferences").select("type, channel, enabled").eq("user_id",t);if(s)return console.error("Error fetching notification preferences:",s),a.NextResponse.json({error:"Failed to fetch preferences"},{status:500});return a.NextResponse.json(n||[])}catch(e){return console.error("Error in notification preferences GET:",e),a.NextResponse.json({error:"Internal server error"},{status:500})}}async function c(e){try{let{userId:r,preferences:t}=await e.json();if(!r||!t)return a.NextResponse.json({error:"User ID and preferences are required"},{status:400});if(!Array.isArray(t))return a.NextResponse.json({error:"Preferences must be an array"},{status:400});let n=t.map(e=>({user_id:r,type:e.type,channel:e.channel,enabled:e.enabled,updated_at:new Date().toISOString()})),{error:s}=await u.OQ.from("user_notification_preferences").upsert(n,{onConflict:"user_id,type,channel",ignoreDuplicates:!1});if(s)return console.error("Error upserting notification preferences:",s),a.NextResponse.json({error:"Failed to save preferences"},{status:500});return a.NextResponse.json({success:!0})}catch(e){return console.error("Error in notification preferences POST:",e),a.NextResponse.json({error:"Internal server error"},{status:500})}}let f=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/user/notification-preferences/route",pathname:"/api/user/notification-preferences",filename:"route",bundlePath:"app/api/user/notification-preferences/route"},resolvedPagePath:"D:\\Users\\enyoc\\Documents\\Dev\\ciuna\\app\\api\\user\\notification-preferences\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:l,staticGenerationAsyncStorage:d,serverHooks:x}=f,h="/api/user/notification-preferences/route";function m(){return(0,i.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:d})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[843,402,974],()=>t(5999));module.exports=n})();